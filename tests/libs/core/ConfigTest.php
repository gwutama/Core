<?php

require_once 'C:\Users\Galuh Utama\workspace\Super-Simple-Framework\libs\core\Config.php';
require_once 'C:\Users\Galuh Utama\workspace\Super-Simple-Framework\libs\core\exceptions.php';

/**
 * Test class for Config.
 * Generated by PHPUnit on 2012-01-28 at 00:17:40.
 */
class ConfigTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Config
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Config;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testSet()
    {
        Config::set("hello.world.long.key1.key2", "test");
        Config::set("foo", "BAR");
        Config::set("foo.bar", "BAZ");
        Config::set("foo.bar.baz", "BLAH");
        Config::set("baz", "BLAH");
        Config::set("acme.foobar", array("foo", "bar"));
        Config::set("long.long2.long3", "hello");
        Config::set("long.long2", "hello2");
        Config::set("long", "hello3");
        Config::set("null.value", null);
        Config::set("null", null);
    }

    public function testGet()
    {
        $this->assertEquals(Config::get("hello.world.long.key1.key2"), "test");
        $this->assertEquals(Config::get("foo"), "BAR");
        $this->assertEquals(Config::get("foo.bar"), "BAZ");
        $this->assertEquals(Config::get("foo.bar.baz"), "BLAH");
        $this->assertEquals(Config::get("baz"), "BLAH");
        $this->assertEquals(Config::get("acme.foobar"), array("foo", "bar"));
        $this->assertEquals(Config::get("long.long2.long3"), "hello");
        $this->assertEquals(Config::get("long.long2"), "hello2");
        $this->assertEquals(Config::get("long"), "hello3");
        $this->assertEquals(Config::get("null.value"), null);
        $this->assertEquals(Config::get("null"), null);
        $this->assertNull(Config::get("lorem.ipsum.dolor"));
        $this->assertNull(Config::get("olo.lol"));
        $this->assertNull(Config::get("123"));
    }

    /**
     * @expectedException InvalidConfigKeyException
     */
    public function testValidKey()
    {
        Config::set("(", "foo");
    }

    /**
     * @expectedException InvalidConfigKeyException
     */
    public function testValidKey2()
    {
        Config::set("hel\$lo.-ddd-", "foo");
    }
}
?>
